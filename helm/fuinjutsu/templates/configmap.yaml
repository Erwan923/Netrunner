apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-nginx-config
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-nginx
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
data:
  nginx.conf: |
    server {
        listen 80;
        server_name localhost;

        # Configuration globale pour les journaux
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;

        # Configuration pour limiter les tailles de requêtes et gérer les timeouts
        client_max_body_size {{ .Values.proxy.config.clientMaxBodySize }};
        client_body_timeout {{ .Values.proxy.config.proxyReadTimeout }}s;
        client_header_timeout {{ .Values.proxy.config.proxyReadTimeout }}s;
        keepalive_timeout {{ .Values.proxy.config.proxyReadTimeout }}s;
        send_timeout {{ .Values.proxy.config.proxyReadTimeout }}s;
        proxy_connect_timeout {{ .Values.proxy.config.proxyReadTimeout }}s;
        proxy_send_timeout {{ .Values.proxy.config.proxyReadTimeout }}s;
        proxy_read_timeout {{ .Values.proxy.config.proxyReadTimeout }}s;

        # Headers de sécurité
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data:" always;

        # Page d'accueil - Redirection vers l'interface Cyberpunk
        location = / {
            return 302 /cyberpunk/;
        }

        # Interface Cyberpunk
        location /cyberpunk/ {
            proxy_pass http://{{ .Release.Name }}-cyberpunk:{{ .Values.cyberpunk.service.ports.taipy }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Interface MCP
        location /mcp/ {
            proxy_pass http://{{ .Release.Name }}-mcp:{{ .Values.mcp.service.port }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Interface cyberpunk HTML
        location /cyberpunk-ui/ {
            proxy_pass http://{{ .Release.Name }}-cyberpunk:{{ .Values.cyberpunk.service.ports.http }}/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # API MCP
        location /api/mcp/ {
            proxy_pass http://{{ .Release.Name }}-mcp:{{ .Values.mcp.service.port }}/mcp/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Page de statut
        location /status {
            default_type text/plain;
            return 200 "Fûinjutsu est en fonctionnement";
        }

        # Gestion d'erreurs
        error_page 404 /404.html;
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
    }