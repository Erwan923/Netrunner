version: '3.8'

# Configuration des réseaux
networks:
  fuinjutsu-network:
    driver: bridge

# Configuration des volumes persistants
volumes:
  fuinjutsu-config:
    driver: local
  fuinjutsu-data:
    driver: local

services:
  fuinjutsu-cyberpunk:
    build:
      context: .
      dockerfile: Dockerfile
    image: fuinjutsu/cyberpunk:latest
    container_name: fuinjutsu-cyberpunk
    ports:
      - "5000:5000"  # Port Taipy pour la configuration
      - "8000:8000"  # Port pour l'interface cyberpunk
    environment:
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY:-}
      - COHERE_API_KEY=${COHERE_API_KEY:-}
      - HOST=0.0.0.0
      - PORT=5000
      - CONFIG_PATH=/app/config/config.json
    command: python cyberpunk_app.py
    volumes:
      - fuinjutsu-config:/app/config
      - fuinjutsu-data:/app/data
    networks:
      - fuinjutsu-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    
  fuinjutsu-mcp:
    build:
      context: .
      dockerfile: Dockerfile
    image: fuinjutsu/mcp:latest
    container_name: fuinjutsu-mcp
    ports:
      - "5001:5000"  # Port Taipy pour l'interface MCP
    environment:
      - HUGGINGFACE_API_KEY=${HUGGINGFACE_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY:-}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY:-}
      - COHERE_API_KEY=${COHERE_API_KEY:-}
      - HOST=0.0.0.0
      - PORT=5000
      - CONFIG_PATH=/app/config/config.json
    command: python mcp_app.py
    volumes:
      - fuinjutsu-config:/app/config
      - fuinjutsu-data:/app/data
    networks:
      - fuinjutsu-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    depends_on:
      - fuinjutsu-cyberpunk

  # Service de proxy inversé pour accéder à toutes les interfaces via un seul point d'entrée
  fuinjutsu-proxy:
    image: nginx:alpine
    container_name: fuinjutsu-proxy
    ports:
      - "80:80"  # Point d'entrée principal
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - fuinjutsu-network
    depends_on:
      - fuinjutsu-cyberpunk
      - fuinjutsu-mcp
    restart: unless-stopped